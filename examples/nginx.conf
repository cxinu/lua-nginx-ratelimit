worker_processes 1;

events {
    worker_connections 1024;
}

http {
    lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/openresty/lualib/?/init.lua;./lualib/?.lua;;";

    # configure rate limiter
    init_by_lua_block {
        require("rate_limit").init({
                redis_host = "127.0.0.1",
                redis_port = 6379,
                redis_timeout = 1000,
                redis_keepalive_timeout = 10000,
                redis_keepalive_pool_size = 100,
                limit = 20,
                window = 60,
                err_msg = "Too many requests, please try again later",
                identifier_fn = function() return ngx.var.http_authorization or ngx.var.remote_addr end
            })
        }

    init_worker_by_lua_block {
        # local mirror = require "mirror"
        # mirror.run()
    }

    server {
        listen 8080;
        server_name localhost;

        location / {
            access_by_lua_block {
                local rate_limit = require("rate_limit")
                rate_limit.enforce()
            }

            content_by_lua_block {
                ngx.say("Welcome to the rate-limited server!")
            }
        }
    }
}
